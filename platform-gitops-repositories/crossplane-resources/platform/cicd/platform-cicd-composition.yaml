apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cicd
  labels:
    group: platform
spec:
  compositeTypeRef:
    apiVersion: jaruiz.crossplane.io/v1
    kind: PlatformCICD
  resources:
    - name: k8s-team-provider-config
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: ProviderConfig
        spec:
          credentials:
            secretRef:
              key: kubeconfig
              name: cluster-config
              namespace: crossplane-system
            source: Secret
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-kubernetes-provider-config"
        - fromFieldPath: spec.name
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-conn"
      readinessChecks:
        - type: None
    - name: github-provider-conf
      base:
        apiVersion: github.upbound.io/v1beta1
        kind: ProviderConfig
        metadata:
          name: default
        spec:
          credentials:
            secretRef:
              key: credentials
              name: github-credentials
              namespace: crossplane-system
            source: Secret
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-github-provider-conf"
      readinessChecks:
        - type: None
    - name: team-github-project
      base:
        apiVersion: repo.github.upbound.io/v1alpha1
        kind: Repository
        spec:
          forProvider:
            template:
              - repository: "platform-argo-crossplane_project_template"
                owner: jaruizes
            visibility: public
          providerConfigRef:
            name: default
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-github-repository"
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.description
          transforms:
            - type: string
              string:
                fmt: "Example project for team %s"
        - fromFieldPath: spec.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-github-provider-conf"
      readinessChecks:
        - type: NonEmpty
          fieldPath: status.atProvider.repoId

    - name: team-github-argocd-repository
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Secret
              metadata:
                namespace: argocd
                labels:
                  argocd.argoproj.io/secret-type: repository
              stringData:
                type: git
                username: jaruizes
          providerConfigRef:
            name: main-kubernetes-provider-conf
          references:
            - dependsOn:
                apiVersion: repo.github.upbound.io/v1alpha1
                kind: Repository
                name: bar
            - patchesFrom:
                apiVersion: v1
                kind: Secret
                name: github-credentials
                namespace: crossplane-system
                fieldPath: data.token
              toFieldPath: data.password
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-argocd-repository"
        - fromFieldPath: spec.name
          toFieldPath: spec.references[0].dependsOn.name
          transforms:
            - type: string
              string:
                fmt: "%s-github-repository"
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-argocd-repository"
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.manifest.stringData.url
          transforms:
            - type: string
              string:
                fmt: "https://github.com/jaruizes/%s-github-repository.git"
        - fromFieldPath: spec.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-kubernetes-provider-config"

    - name: team-example-argocd-app
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: argoproj.io/v1alpha1
              kind: Application
              metadata:
                namespace: argocd
              spec:
                project: default
                source:
                  path: './gitops/manifests'
                  targetRevision: HEAD
                destination:
                  server: https://kubernetes.default.svc
                  namespace: apps
                syncPolicy:
                  syncOptions:
                    - CreateNamespace=true
                  automated:
                    prune: true
                    selfHeal: true
          providerConfigRef:
            name: main-kubernetes-provider-conf
          references:
            - dependsOn:
                apiVersion: repo.github.upbound.io/v1alpha1
                kind: Repository
                name: bar
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-argocd-app"
        - fromFieldPath: spec.name
          toFieldPath: spec.references[0].dependsOn.name
          transforms:
            - type: string
              string:
                fmt: "%s-github-repository"
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-app"
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.manifest.spec.source.repoURL
          transforms:
            - type: string
              string:
                fmt: "https://github.com/jaruizes/%s-github-repository.git"
        - fromFieldPath: spec.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-kubernetes-provider-config"
